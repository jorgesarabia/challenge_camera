// Mocks generated by Mockito 5.4.2 from annotations
// in challenge_camera/test/unit_testing/domain/picture_facade_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:challenge_camera/domain/facades/picture_facade.dart' as _i2;
import 'package:challenge_camera/domain/models/saved_picture.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PictureFacade].
///
/// See the documentation for Mockito's code generation for more information.
class MockPictureFacade extends _i1.Mock implements _i2.PictureFacade {
  MockPictureFacade() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.SavedPicture>> getPictures() => (super.noSuchMethod(
        Invocation.method(
          #getPictures,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.SavedPicture>>.value(<_i4.SavedPicture>[]),
      ) as _i3.Future<List<_i4.SavedPicture>>);

  @override
  _i3.Future<String?> savePicture(String? imagePath) => (super.noSuchMethod(
        Invocation.method(
          #savePicture,
          [imagePath],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<bool> saveDetails(_i4.SavedPicture? savedPicture) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDetails,
          [savedPicture],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
